"""
Django settings for LSmain project.

Generated by 'django-admin startproject' using Django 5.1.2.

For more information on this file, see
https://docs.djangoproject.com/en/5.1/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/5.1/ref/settings/
"""
import os  
from pathlib import Path

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent

# Configurações de login e redirecionamento
LOGIN_REDIRECT_URL = 'home'
LOGIN_URL = '/login/'

# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/5.1/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'django-insecure-ylxmjhqh%ug3b)jizt*m47&(d7_d1xs@obias%yx!-5io0tm-#'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = ['finalteste.localhost','localhost', '127.0.0.1', 'testejaum.localhost', 'clienteteste.localhost']

# User model customizado
AUTH_USER_MODEL = 'LSDash.UserModel'

# API Keys
OPENAI_API_KEY = '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'

# Email configuration
EMAIL_BACKEND = 'django.core.mail.backends.smtp.EmailBackend'
EMAIL_HOST = 'smtp.gmail.com'
EMAIL_PORT = 587
EMAIL_USE_TLS = True
EMAIL_HOST_USER = 'jaumamaralpessoal@gmail.com'
EMAIL_HOST_PASSWORD = 'marw oycd lsqy bhxq'
DEFAULT_FROM_EMAIL = 'jaumamaralpessoal@gmail.com'

# Password reset timeout (2 dias)
PASSWORD_RESET_TIMEOUT = 86400 * 2 

# Authentication backends - custom tenant-aware backend primeiro
AUTHENTICATION_BACKENDS = [
    'LSmain.auth_backend.TenantAwareAuthBackend',
    'django.contrib.auth.backends.ModelBackend',  # Fallback padrão
]

MIDDLEWARE = [
    'django_tenants.middleware.main.TenantMainMiddleware',  # Tenant middleware sempre primeiro
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'LSmain.middleware.TenantAwareSettingsMiddleware',  # Ajustes de configuração por tenant
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
    'LSmain.middleware.SessionDebugMiddleware',  # Debug - remover em produção
    'LSmain.middleware.TenantAccessControlMiddleware',  # Controle de acesso
    'LSmain.middleware.SessionTrackingMiddleware'  # Rastreamento de sessão
]

ROOT_URLCONF = 'LSmain.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [
            BASE_DIR / 'templates',
            BASE_DIR / 'base',
        ],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
                'LSmain.context_processors.tenant_settings',  # Context processor para tenant
            ],
        },
    },
]

WSGI_APPLICATION = 'LSmain.wsgi.application'

# Database
# https://docs.djangoproject.com/en/5.1/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django_tenants.postgresql_backend',
        'NAME': 'ls-dash-data',
        'USER': 'ls-dash',
        'PASSWORD': '9090',
        'HOST': 'localhost',
        'PORT': '5432',
    }
}

DATABASE_ROUTERS = (
    'django_tenants.routers.TenantSyncRouter',
)

# Password validation
# https://docs.djangoproject.com/en/5.1/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]

# Internationalization
# https://docs.djangoproject.com/en/5.1/topics/i18n/

LANGUAGE_CODE = 'pt-br'
TIME_ZONE = 'America/Sao_Paulo'
USE_I18N = True
USE_TZ = True

# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/5.1/howto/static-files/

STATIC_URL = 'static/'
STATICFILES_DIRS = [
    BASE_DIR / "base" / 'static'
]
STATIC_ROOT = BASE_DIR / "staticfiles"

# Default primary key field type
# https://docs.djangoproject.com/en/5.1/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'

# Django-tenants configuration
TENANT_APPS = [
    # Apps específicos para cada cliente/tenant
    'django.contrib.contenttypes',
    'django.contrib.auth',
    'django.contrib.sessions',
    'django.contrib.messages',
    'LSCliente'
]

SHARED_APPS = [
    # Apps compartilhados entre todos os tenants
    'django_tenants',
    'LSDash',
    'django.contrib.contenttypes',
    'django.contrib.auth',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.admin',
    'django.contrib.staticfiles',
]

# Configurações do sistema multi-tenant
TENANT_MODEL = "LSDash.Cliente"
TENANT_DOMAIN_MODEL = "LSDash.Dominio"
PUBLIC_SCHEMA_NAME = 'public'
PUBLIC_SCHEMA_URLCONF = 'LSmain.urls'
TENANT_URLCONF = 'LSmain.tenant_urls'

# Lista final de apps instalados
INSTALLED_APPS = list(SHARED_APPS) + [app for app in TENANT_APPS if app not in SHARED_APPS]

# Email backend para desenvolvimento - console output
EMAIL_BACKEND = 'django.core.mail.backends.console.EmailBackend'